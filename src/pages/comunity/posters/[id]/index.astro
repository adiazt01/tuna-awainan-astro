---
import CommentItem from "../../../../components/CommentItem.astro";
import ListItems from "../../../../components/diccionariComponents/ListItems.astro";
import Layout from "../../../../layouts/Layout.astro";
import LayoutAquarium from "../../../../layouts/LayoutAquarium.astro";
import { supabase } from "../../../../lib/supabase";
import BackButton from "../../../../components/BackButton.astro";

const { id } = Astro.params;

if (!id) {
  return Astro.redirect("/404");
}

const { data: blog, error: errorBlog } = await supabase
  .from("blogs")
  .select(
    `*, user_id (
     username
      ))`
  )
  .eq("id", id);

const { data: comments, error: errorComments } = await supabase
  .from("blogs_comments")
  .select(
    `*, user_id (
     username
      )`
  )
  .eq("blog_id", id)
  .order("created_at", { ascending: false });

console.log(comments);

console.log(blog);

if (errorBlog) {
  return Astro.redirect("/404");
}

// Maneja el envío de un nuevo comentario
if (Astro.request.method === "POST") {
  try {
    const { cookies, redirect } = Astro;
    const accessToken = cookies.get("sb-access-token");
    const refreshToken = cookies.get("sb-refresh-token");
    const data = await Astro.request.formData();

    const content = data.get("content");

    // Si no hay tokens de acceso, redirige a la página de inicio de sesión
    if (!accessToken || !refreshToken) {
      return Astro.redirect("/signin");
    }

    // Si el contenido del comentario está vacío, lanza un error
    if (!content) {
      throw new Error("El contenido del comentario es requerido");
    }

    let session;
    try {
      // Establece la sesión con los tokens
      session = await supabase.auth.setSession({
        refresh_token: refreshToken.value,
        access_token: accessToken.value,
      });

      // Si hay un error en la sesión, borra las cookies y redirige a la página de inicio de sesión
      if (session.error) {
        Astro.cookies.delete("sb-access-token", {
          path: "/",
        });
        Astro.cookies.delete("sb-refresh-token", {
          path: "/",
        });
        return Astro.redirect("/signin");
      }
    } catch (error) {
      // Si hay un error al establecer la sesión, borra las cookies y redirige a la página de inicio de sesión
      Astro.cookies.delete("sb-access-token", {
        path: "/",
      });
      Astro.cookies.delete("sb-refresh-token", {
        path: "/",
      });
      return Astro.redirect("/signin");
    }

    const user_id = session.data.user?.id;

    // Si no se encuentra el 'user_id', redirige a la página de inicio de sesión
    if (!user_id) {
      return Astro.redirect("/signin");
    }

    // Consulta el perfil del usuario en la base de datos
    const { data: profile, error: errorFoundUser } = await supabase
      .from("users")
      .select("*")
      .eq("id", user_id)
      .single();

    // Si hay un error al obtener el perfil del usuario, redirige a la página de inicio de sesión
    if (errorFoundUser) {
      return Astro.redirect("/signin");
    }

    // Inserta el nuevo comentario en la base de datos
    const { error } = await supabase.from("blogs_comments").insert([
      {
        content: content,
        user_id: profile.id,
        blog_id: id,
      },
    ]);

    // Si hay un error al guardar el comentario, lanza un error
    if (error) {
      console.log(error);
      throw new Error("No se pudo guardar el comentario");
    }

    // Redirige a la misma página para mostrar el nuevo comentario
    return redirect(Astro.request.url);
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

---
 
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
crossorigin=""/>
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
crossorigin=""></script>

<Layout title={`${blog[0]?.title} | Tuna Awainan`}>
  <section class="container font-custom">
   
    <!--bton de regresar -->
    <div class="buttons-container">
      <BackButton page="/comunity/posters" />
    </div>

    <!-- contenedor del contenido del post -->
    <div class="content-container">
      <div class="post-content">
        <h2 class="post-title">{blog[0]?.title}</h2>
        <div class="post-info">
          <div class="relative inline-flex items-center justify-center size-10 overflow-hidden bg-gray-100 rounded-full dark:bg-gray-600" >
            <span class="font-medium text-gray-600 dark:text-gray-300">JL</span>
          </div>
        <span class="author">Autor: {blog[0]?.user_id?.username.toUpperCase() || "Anónimo"}</span>
        </div>  
        <!-- contenido del post -->
        <p class="forum-text">{blog[0]?.content}</p>
      </div>

      <div style="height: 300px; width: 500px" id="map"></div>
        
        <section class="w-full bg-white dark:bg-gray-900 py-8 antialiased">
          
          <!--seccion comment -->
          <div class="comments-section">
            <h3>Comentarios</h3>
            <!--mostrar comentario -->
              <div class="  grid grid-cols-1 gap-2">
                {   
                  comments?.map((comment) => (
                    <CommentItem user_id={comment.user_id} 
                                  created_at={comment.created_at} 
                                  content={comment.content} />))
                  }
            </div>
          </div>

          <!-- from de comentario -->
          <form class="comment-form" method="POST">
            <h3>Deja un comentario</h3>
              <label for="comment" class="sr-only">Tu comentario</label>
              <textarea
                id="comment"
                name="content"
                rows="6"
                placeholder="Escribe tu comentario aquí..."
                required></textarea>
            <button type="submit" class="submit-btn" >Enviar</button>
          </form>
        </section>
      </div>  
    </div>
  </section>

</Layout>

<style>

  /*define colores*/
  :root {
    --bg-color: #f8f9fa;
    --text-color: #333;
    --secondary-text-color: #666;
    --border-color: #e5e7eb;
    --shadow-color: rgba(0, 0, 0, 0.05);
    --btn-color: #0cc0df;
  }
  /* contenedor principal */
  .container {
    position: relative;
    width: 100%;
    max-width: 900px;
    margin: 0 auto;
    padding: 40px 20px;
  }

  .font-custom {
    font-family: "Quicksand Variable", "Helvetica", Arial, sans-serif;
  }

    /* bottones */
  .buttons-container {
    position: absolute;
    top: 1em;
    left: 0em;
  }

  .reply-btn {
    background-color: var(--btn-color);
    color: white;
    padding: 8px 12px;
    font-size: 0.875rem;
    font-weight: 600;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .reply-btn:hover {
    background-color: #0aa4bc;
  }

  /* continer  del foro */
  .content-container {
    margin-top: 30px;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 80%;
    max-width: 800px;
    margin: 0 auto;
  }

  .post-content {
    width: 100%;
    padding: 20px;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0px 2px 6px var(--shadow-color);
    margin-top: 10px;
    margin-bottom: 2em;
  }

  .post-title {
    font-size: 2rem;
    font-weight: 700;
    color: var(--text-color);
    margin-bottom: 10px;
  }

  .post-info {
    display: flex;
    justify-content: space-between;
    margin-bottom: 1em;
    color: var(--secondary-text-color);
    font-size: 0.9rem;
    border-bottom: 1px solid var(--border-color);
    align-items: center;
    justify-content: end;
    gap: 1em;
    padding-bottom: .8em;
  }

  .author, .date {
    font-style: italic;
  }

  .post-text {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--text-color);
  }

  /* section de comentarios */
  .comments-section {
    width: 100%;
    margin-top: 20px;
    padding: 20px;
    background-color: var(--bg-color);
    border-radius: 8px;
    box-shadow: 0px 2px 6px var(--shadow-color);
  }

  .comments-section h3 {
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--text-color);
    margin-bottom: 15px;
  }

  .comment {
    padding: 10px;
    border-bottom: 1px solid var(--border-color);
  }

  .comment:last-child {
    border-bottom: none;
  }

  .comment-author {
    font-weight: 600;
    color: var(--text-color);
  }

  .comment-date {
    font-size: 0.875rem;
    color: var(--secondary-text-color);
    margin-bottom: 5px;
  }

  .comment-text {
    font-size: 1rem;
    color: var(--text-color);
    margin-top: 5px;
  }

  /* form de comentario */
  .comment-form {
    width: 100%;
    margin-top: 20px;
    padding: 20px;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0px 2px 6px var(--shadow-color);
    display: flex;
    flex-direction: column;
  }

  .comment-form h3 {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 10px;
    color: var(--text-color);
  }

  .comment-input {
    width: 100%;
    padding: 10px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    font-size: 1rem;
    margin-bottom: 10px;
    resize: vertical;
  }

  .submit-btn {
    align-self: flex-end;
    background-color: var(--btn-color);
    color: white;
    padding: 8px 16px;
    font-size: 0.875rem;
    font-weight: 600;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
    margin-top: 1em;
  }

  .submit-btn:hover {
    background-color: #0aa4bc;
  }

  textarea{
    border-color: gainsboro;
  }
</style>

<script>

  import "leaflet";

  var map = L.map('map').setView([8.296963, -62.711613], 13);
  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
}).addTo(map);
  var marker = L.marker([8.296963, -62.711613]).addTo(map);

  marker.bindPopup("<b>Aqui se encuentra la UCAB</b>").openPopup();

  var marker2 = L.marker();

  function onMapClick(e) {
    marker2
        .setLatLng(e.latlng)
        .bindPopup("<b>Hola </b>" + e.latlng.toString())
        .openPopup()
        .addTo(map);
        
  }

  map.on('click', onMapClick);

</script>
